@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Stock Simulator Game</h1>

    <div class="row justify-content-start">
        <div class="col-2 text-left">
            <b>Name</b>
        </div>
        <div class="col-10 text-left">
            Volkswagen
        </div>
    </div>

    <div class="row justify-content-start">
        <div class="col-2 text-left">
            <b>Ticker</b>
        </div>
        <div class="col-10 text-left">
            VWAG
        </div>
    </div>

    <div class="row justify-content-start">
        <div class="col-2 text-left">
            <b>Price</b>
        </div>
        <div class="col-10 text-left">
            EUR <span id="stockPrice">63.2</span>
        </div>
    </div>

    <br />
    <br />

    <!-- Insert a Javascript chart. See https://www.chartjs.org/ -->
    <canvas id="stockChart" width="800" height="300"></canvas>

    <br />
    <br />

    <p class="text-left">
        <a class="btn btn-primary" data-toggle="collapse" href="#stockChart" role="button" aria-expanded="true" aria-controls="stockChart">Toggle Chart</a>
    </p>

    <div class="collapse" id="stockChart">
        <div class="card card-body">
            <img src="~/images/demochart.png" />
        </div>
    </div>
</div>

<!-- Include Chart.js Javascript library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.min.js"></script>

<!-- Include SignalR Javascript library -->
<script src="~/lib/signalr/dist/browser/signalr.js"></script>

<script type="text/javascript">
    var i = 11;

    // Connect to SignalR hub and implement callback method.
    var connection = new signalR.HubConnectionBuilder().withUrl("/StockPriceHub").build();

    connection.on("PriceUpdated", function (stockId, price) {

        // Update price element
        document.getElementById("stockPrice").innerText = price;

        // Update chart data by removing the first item and adding the new price to the end of the array
        chart.data.datasets.forEach((dataset) => {
            dataset.data.shift();
            dataset.data.push(price);
        });

        chart.update();
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });


    // Build chart
    // See: https://www.chartjs.org/

    var ctx = document.getElementById('stockChart').getContext('2d');
    var chart = new Chart(ctx, {
        // The type of chart we want to create
        type: 'line',

        // The data for our dataset
        data: {
            labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
            datasets: [{
                label: "VWAG - Volkswagen",
                backgroundColor: 'rgb(236, 246, 254)',
                borderColor: 'rgb(11, 115, 200)',
                data: [8.1, 10.3, 15.7, 12.0, 20.4, 30.9, 45.1, 48.5, 44.8, 50.2],
            }]
        },

        // Configuration options go here
        options: {}
    });
</script>